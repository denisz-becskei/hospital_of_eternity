{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { catchError, debounceTime, map, startWith } from 'rxjs/operators';\nimport { ListingAddComponent } from '../add/listing-add.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/fb-base.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/toolbar\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/autocomplete\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"../../../shared/components/container/container.component\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"@angular/material/core\";\nimport * as i12 from \"../card/listing-card.component\";\nimport * as i13 from \"@angular/material/progress-spinner\";\n\nfunction ListingComponent_mat_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r5, \" \");\n  }\n}\n\nfunction ListingComponent_ng_container_9_app_listing_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-listing-card\", 11);\n  }\n\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"patient\", item_r8);\n  }\n}\n\nfunction ListingComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ListingComponent_ng_container_9_app_listing_card_1_Template, 1, 1, \"app-listing-card\", 10);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const list_r6 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", list_r6);\n  }\n}\n\nfunction ListingComponent_ng_template_11_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 13);\n    i0.ɵɵtext(2, \" Valami hiba t\\u00F6rt\\u00E9nt! \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction ListingComponent_ng_template_11_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵelement(1, \"mat-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ListingComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ListingComponent_ng_template_11_ng_container_0_Template, 3, 0, \"ng-container\", 6);\n    i0.ɵɵtemplate(1, ListingComponent_ng_template_11_ng_template_1_Template, 2, 0, \"ng-template\", null, 12, i0.ɵɵtemplateRefExtractor);\n  }\n\n  if (rf & 2) {\n    const _r10 = i0.ɵɵreference(2);\n\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.errorObject)(\"ngIfElse\", _r10);\n  }\n}\n\nexport class ListingComponent {\n  constructor(service, dialog) {\n    this.service = service;\n    this.dialog = dialog;\n    this.list$ = null;\n    this.myControl = new FormControl();\n    this.options = ['One', 'Two', 'Three'];\n    this.filteredOptions$ = null;\n    this.errorObject = null;\n  }\n\n  ngOnInit() {\n    this.get();\n    this.filteredOptions$ = this.myControl.valueChanges.pipe(startWith(''), debounceTime(300), map(value => this._filter(value)));\n  }\n\n  get() {\n    this.errorObject = null;\n    this.list$ = this.service.get('patients').pipe(catchError(err => {\n      this.errorObject = err;\n      return throwError(err);\n    }));\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(ListingAddComponent, {});\n    const infections = this.service.get(\"infections\");\n    infections.forEach(function (value) {\n      console.log(value.length);\n    });\n    infections.forEach(function (value) {\n      console.log(value[1].name);\n    }); // tslint:disable-next-line: deprecation\n\n    dialogRef.afterClosed().subscribe(patient => {\n      console.log(patient);\n\n      if (patient === null || patient === void 0 ? void 0 : patient.name) {\n        patient.infection = \"Hello World Syndrome\";\n        console.log(infections);\n        this.service.add('patients', patient).then(id => {\n          console.log(id);\n        });\n      }\n    }, err => {\n      console.warn(err);\n    });\n  }\n\n  _filter(value) {\n    const filterValue = value.toLowerCase();\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n}\n\nListingComponent.ɵfac = function ListingComponent_Factory(t) {\n  return new (t || ListingComponent)(i0.ɵɵdirectiveInject(i1.FbBaseService), i0.ɵɵdirectiveInject(i2.MatDialog));\n};\n\nListingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListingComponent,\n  selectors: [[\"app-listing\"]],\n  decls: 16,\n  vars: 9,\n  consts: [[\"color\", \"lightgray\"], [1, \"searchbar\"], [\"type\", \"text\", \"placeholder\", \"Search...\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"classes\", \"container-1 flex\"], [4, \"ngIf\", \"ngIfElse\"], [\"loadingOrError\", \"\"], [\"mat-fab\", \"\", \"color\", \"lightgray\", 1, \"action-btn\", 3, \"click\"], [3, \"value\"], [\"class\", \"item\", 3, \"patient\", 4, \"ngFor\", \"ngForOf\"], [1, \"item\", 3, \"patient\"], [\"loading\", \"\"], [1, \"centering\"]],\n  template: function ListingComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-toolbar\", 0);\n      i0.ɵɵelementStart(1, \"mat-toolbar-row\");\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵelement(3, \"input\", 2);\n      i0.ɵɵelementStart(4, \"mat-autocomplete\", null, 3);\n      i0.ɵɵtemplate(6, ListingComponent_mat_option_6_Template, 2, 2, \"mat-option\", 4);\n      i0.ɵɵpipe(7, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"app-container\", 5);\n      i0.ɵɵtemplate(9, ListingComponent_ng_container_9_Template, 3, 1, \"ng-container\", 6);\n      i0.ɵɵpipe(10, \"async\");\n      i0.ɵɵtemplate(11, ListingComponent_ng_template_11_Template, 3, 2, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function ListingComponent_Template_button_click_13_listener() {\n        return ctx.openDialog();\n      });\n      i0.ɵɵelementStart(14, \"mat-icon\");\n      i0.ɵɵtext(15, \"add\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(5);\n\n      const _r3 = i0.ɵɵreference(12);\n\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(7, 5, ctx.filteredOptions$));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(10, 7, ctx.list$))(\"ngIfElse\", _r3);\n    }\n  },\n  directives: [i3.MatToolbar, i3.MatToolbarRow, i4.MatInput, i5.DefaultValueAccessor, i6.MatAutocompleteTrigger, i5.NgControlStatus, i5.FormControlDirective, i6.MatAutocomplete, i7.NgForOf, i8.ContainerComponent, i7.NgIf, i9.MatButton, i10.MatIcon, i11.MatOption, i12.ListingCardComponent, i13.MatSpinner],\n  pipes: [i7.AsyncPipe],\n  styles: [\".action-btn[_ngcontent-%COMP%] {\\n  position: fixed;\\n  bottom: 16px;\\n  right: 16px;\\n}\\n\\n.searchbar[_ngcontent-%COMP%] {\\n  width: 100%;\\n  margin-left: 16px;\\n}\\n\\n.searchbar[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  width: 100%;\\n  max-width: 250px;\\n}\\n\\n.centering[_ngcontent-%COMP%] {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100vw;\\n  height: 100vh;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3RpbmcuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7QUFDRjs7QUFFQTtFQUNFLFdBQUE7RUFDQSxpQkFBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLGdCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxlQUFBO0VBQ0EsTUFBQTtFQUNBLE9BQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0FBQ0YiLCJmaWxlIjoibGlzdGluZy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hY3Rpb24tYnRuIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBib3R0b206IDE2cHg7XG4gIHJpZ2h0OiAxNnB4O1xufVxuXG4uc2VhcmNoYmFyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi1sZWZ0OiAxNnB4O1xufVxuXG4uc2VhcmNoYmFyIGlucHV0IHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMjUwcHg7XG59XG5cbi5jZW50ZXJpbmcge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMHZ3O1xuICBoZWlnaHQ6IDEwMHZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cbiJdfQ== */\"]\n});","map":{"version":3,"sources":["D:\\Projects\\Web Development Frameworks\\hospital-of-eternity\\src\\app\\pages\\listing\\list\\listing.component.ts","D:\\Projects\\Web Development Frameworks\\hospital-of-eternity\\src\\app\\pages\\listing\\list\\listing.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Patient } from './../../../shared/models/Patient/patient.model';\nimport { FbBaseService } from '../../../services/fb-base.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms';\nimport { catchError, debounceTime, map, startWith } from 'rxjs/operators';\nimport { ListingAddComponent } from '../add/listing-add.component';\n\n@Component({\n  selector: 'app-listing',\n  templateUrl: './listing.component.html',\n  styleUrls: ['./listing.component.scss']\n})\nexport class ListingComponent implements OnInit {\n  list$: Observable<Patient[]> | null = null;\n\n  myControl = new FormControl();\n  options: string[] = ['One', 'Two', 'Three'];\n  filteredOptions$: Observable<string[]> | null = null;\n\n  errorObject = null;\n\n  constructor(private service: FbBaseService<Patient>, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.get();\n    this.filteredOptions$ = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        debounceTime(300),\n        map(value => this._filter(value))\n      );\n  }\n\n  get(): void {\n    this.errorObject = null;\n    this.list$ = this.service.get('patients').pipe(\n      catchError(err => {\n        this.errorObject = err;\n        return throwError(err);\n      })\n    );\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(ListingAddComponent, {});\n    const infections = this.service.get(\"infections\");\n    infections.forEach(function (value) {\n      console.log(value.length);\n    });\n    infections.forEach(function (value) {\n      console.log(value[1].name);\n    });\n    // tslint:disable-next-line: deprecation\n    dialogRef.afterClosed().subscribe((patient: Patient) => {\n      console.log(patient);\n      if (patient?.name) {\n        patient.infection = \"Hello World Syndrome\";\n        console.log(infections);\n        this.service.add('patients', patient).then(id => { console.log(id); });\n      }\n    }, err => {\n      console.warn(err);\n    });\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n}\n","<mat-toolbar color=\"lightgray\">\n  <mat-toolbar-row>\n    <div class=\"searchbar\">\n      <input type=\"text\" placeholder=\"Search...\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\">\n      <mat-autocomplete #auto=\"matAutocomplete\">\n        <mat-option *ngFor=\"let option of filteredOptions$ | async\" [value]=\"option\">\n          {{option}}\n        </mat-option>\n      </mat-autocomplete>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<app-container classes=\"container-1 flex\">\n  <ng-container *ngIf=\"(list$) | async as list; else loadingOrError\">\n    <app-listing-card class=\"item\" *ngFor=\"let item of list\" [patient]=\"item\"></app-listing-card>\n    <br>\n  </ng-container>\n  <ng-template #loadingOrError>\n    <ng-container *ngIf=\"errorObject; else loading\">\n      <span class=\"centering\">\n        Valami hiba történt!\n      </span>\n    </ng-container>\n    <ng-template #loading>\n      <span class=\"centering\">\n        <mat-spinner></mat-spinner>\n      </span>\n    </ng-template>\n  </ng-template>\n</app-container>\n\n<button mat-fab class=\"action-btn\" color=\"lightgray\" (click)=\"openDialog()\">\n  <mat-icon>add</mat-icon>\n</button>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}